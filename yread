#!/usr/bin/env perl
#===============================================================================
#         FILE:  yread
#       AUTHOR:  ALEC CHEN (AC), alec@cpan.org
#===============================================================================

use strict;
use warnings;

use File::Spec;
use FindBin qw($RealBin);
use List::MoreUtils qw(all);
#use Smart::Comments;

my @patterns = @ARGV;
### @patterns

my $option = @ARGV > 0 && $ARGV[0] =~ /^-/ ? shift @patterns : q{};
### $option
### @patterns

if ($option eq '-h') {
    my $readme = File::Spec->catfile($RealBin, 'README');
    open README, "<$readme"
        or die "can't open $readme for reading: $!\n";
    print <README>;
    close README;
    exit;
}

my $data = File::Spec->catfile($ENV{HOME}, '.y');
### $data

open INPUT, "<$data"
    or die "can't open $data for reading: $!\n";

my %data = map { $_->[0] => [$_->[1], $_->[2] ] } 
    map { [split /\|/, $_] } <INPUT>;
### %data

close INPUT;

my $time = time;
my @sorted_data = map { [$_->[0], $_->[1]] } 
    sort { $b->[1] <=> $a->[1] } 
    map { 
        my $dx = $_->[2];
        my $ratio = $dx < 3600 ? 4: 
            $dx < 86400 ? 2 :
            $dx < 604800 ? 0.5 :
            0.25;
        my $sort_by = 
            $option eq '-r' ? $_->[1] :
            $option eq '-t' ? 1/$dx     : $_->[1]*$ratio;
        [$_->[0], $sort_by];
    } map { [$_, $data{$_}->[0], $time - $data{$_}->[1]] } keys %data;
### @sorted_data

if (@ARGV == 0) {
    map { printf "%-10d %s\n", $_->[1], $_->[0] } reverse @sorted_data;
}
else {
    my @output = ();
    foreach my $sorted_data (@sorted_data) {
        my $path = $sorted_data->[0];
        if (all {$path =~ /$_/i} @patterns) {
            if ($option ne '-l') {
                print "$path\n";
                last;
            }
            else {
                push @output, $sorted_data;
            }
        }
    }

    if (@output > 0) {
        map { printf "%-10d %s\n", $_->[1], $_->[0] } reverse @output;
    }
}
